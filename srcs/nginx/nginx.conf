user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    server {
        # IPv4
        listen 443 ssl default_server;
        # IPv6
        listen [::]:443 ssl default_server;

        ssl_certificate /etc/nginx/ssl/server-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/server-key.pem;

        server_name 0.0.0.0;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Forward all requests to the Django application running on a WSGI server (e.g., Gunicorn)
        location / {
            proxy_pass http://django-app:8000;  # Replace 'django' with the Django app container/service name if different
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location /wss/ {
            proxy_pass http://django-app:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # # Optional: You can still serve static files directly through NGINX if needed
        location /static/ {
            alias /var/lib/django-app;  # Replace with the actual path to your Django static files
        }

        location /media/ {
             alias /var/lib/media;  # Replace with the actual path to your Django media files
        }

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        gzip on;
    }
}
